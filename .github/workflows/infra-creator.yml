name: infra creation
on:
  push:
    branches:
      - demo
  pull_request:
    branches:
      - feature-demo


permissions:
  contents: write
  pull-requests: write
  id-token: write


env:
  TF_VERSION: "1.12.0"
  AWS_REGION: "ap-south-1"
  AWS_ROLE_ARN: "arn:aws:iam::211125325699:role/Demo_Access"  


jobs:
  lint-and-security:
    name: Lint and Security Checks
    runs-on: self-hosted
    if: github.event_name == 'pull_request'
    defaults:
      run:
        working-directory: ./main-infra
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref || github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install TFLint
        run: |
          wget https://github.com/terraform-linters/tflint/releases/download/v0.50.2/tflint_linux_amd64.zip
          unzip tflint_linux_amd64.zip
          sudo mv tflint /usr/local/bin/
          tflint --version

      - name: Run TFLint
        run: tflint --init && tflint -f compact

      - name: Run Checkov (soft fail)
        uses: bridgecrewio/checkov-action@v12.2458.0
        with:
          directory: .
          soft_fail: true


  terraform-plan_apply:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: lint-and-security
    name: Terraform Plan
    defaults:
      run:
        working-directory: ./main-infra

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref || github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Initialize Terraform
        run: terraform init -reconfigure

      - name: Terraform test
        run: |
         terraform test
        continue-on-error: true   

      - name: Terraform fmt
        run: terraform fmt -recursive

      - name: Validate Terraform
        run: terraform validate

      - name: Generate Terraform Plan
        run: terraform plan

      - name: Generate Markdown with Terraform Docs
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        uses: terraform-docs/gh-actions@v1.3.0
        with:
          working-dir: ./main-infra
          output-file: README.md
          output-method: inject
          git-push: false
          config-file: .terraform-docs.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
  
      - name: Posting README.md as PR Comment
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2.9.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: "Terraform Documentation"
          path: "./main-infra/README.md"
          number: ${{ github.event.pull_request.number }}
        
      - name: Applying Terraform after PR Merge
        if: github.event_name == 'push' && github.ref == 'refs/heads/demo'
        run: |
          terraform init
          terraform apply -auto-approve
        working-directory: ./main-infra